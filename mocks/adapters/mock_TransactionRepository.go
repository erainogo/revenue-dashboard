// Code generated by mockery v2.53.3. DO NOT EDIT.

package adapters

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockTransactionRepository is an autogenerated mock type for the TransactionRepository type
type MockTransactionRepository struct {
	mock.Mock
}

type MockTransactionRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *MockTransactionRepository) EXPECT() *MockTransactionRepository_Expecter {
	return &MockTransactionRepository_Expecter{mock: &_m.Mock}
}

// BulkInsert provides a mock function with given fields: ctx, docs
func (_m *MockTransactionRepository) BulkInsert(ctx context.Context, docs []interface{}) error {
	ret := _m.Called(ctx, docs)

	if len(ret) == 0 {
		panic("no return value specified for BulkInsert")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, []interface{}) error); ok {
		r0 = rf(ctx, docs)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockTransactionRepository_BulkInsert_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BulkInsert'
type MockTransactionRepository_BulkInsert_Call struct {
	*mock.Call
}

// BulkInsert is a helper method to define mock.On call
//   - ctx context.Context
//   - docs []interface{}
func (_e *MockTransactionRepository_Expecter) BulkInsert(ctx interface{}, docs interface{}) *MockTransactionRepository_BulkInsert_Call {
	return &MockTransactionRepository_BulkInsert_Call{Call: _e.mock.On("BulkInsert", ctx, docs)}
}

func (_c *MockTransactionRepository_BulkInsert_Call) Run(run func(ctx context.Context, docs []interface{})) *MockTransactionRepository_BulkInsert_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].([]interface{}))
	})
	return _c
}

func (_c *MockTransactionRepository_BulkInsert_Call) Return(_a0 error) *MockTransactionRepository_BulkInsert_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockTransactionRepository_BulkInsert_Call) RunAndReturn(run func(context.Context, []interface{}) error) *MockTransactionRepository_BulkInsert_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockTransactionRepository creates a new instance of MockTransactionRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockTransactionRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockTransactionRepository {
	mock := &MockTransactionRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
