// Code generated by mockery v2.53.3. DO NOT EDIT.

package adapters

import (
	context "context"

	entities "github.com/erainogo/revenue-dashboard/pkg/entities"
	mock "github.com/stretchr/testify/mock"
)

// MockMonthlySalesSummeryRepository is an autogenerated mock type for the MonthlySalesSummeryRepository type
type MockMonthlySalesSummeryRepository struct {
	mock.Mock
}

type MockMonthlySalesSummeryRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *MockMonthlySalesSummeryRepository) EXPECT() *MockMonthlySalesSummeryRepository_Expecter {
	return &MockMonthlySalesSummeryRepository_Expecter{mock: &_m.Mock}
}

// BulkInsert provides a mock function with given fields: ctx, docs
func (_m *MockMonthlySalesSummeryRepository) BulkInsert(ctx context.Context, docs map[string]*entities.MonthlySales) error {
	ret := _m.Called(ctx, docs)

	if len(ret) == 0 {
		panic("no return value specified for BulkInsert")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, map[string]*entities.MonthlySales) error); ok {
		r0 = rf(ctx, docs)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockMonthlySalesSummeryRepository_BulkInsert_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BulkInsert'
type MockMonthlySalesSummeryRepository_BulkInsert_Call struct {
	*mock.Call
}

// BulkInsert is a helper method to define mock.On call
//   - ctx context.Context
//   - docs map[string]*entities.MonthlySales
func (_e *MockMonthlySalesSummeryRepository_Expecter) BulkInsert(ctx interface{}, docs interface{}) *MockMonthlySalesSummeryRepository_BulkInsert_Call {
	return &MockMonthlySalesSummeryRepository_BulkInsert_Call{Call: _e.mock.On("BulkInsert", ctx, docs)}
}

func (_c *MockMonthlySalesSummeryRepository_BulkInsert_Call) Run(run func(ctx context.Context, docs map[string]*entities.MonthlySales)) *MockMonthlySalesSummeryRepository_BulkInsert_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(map[string]*entities.MonthlySales))
	})
	return _c
}

func (_c *MockMonthlySalesSummeryRepository_BulkInsert_Call) Return(_a0 error) *MockMonthlySalesSummeryRepository_BulkInsert_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockMonthlySalesSummeryRepository_BulkInsert_Call) RunAndReturn(run func(context.Context, map[string]*entities.MonthlySales) error) *MockMonthlySalesSummeryRepository_BulkInsert_Call {
	_c.Call.Return(run)
	return _c
}

// GetMonthlyRevenue provides a mock function with given fields: ctx
func (_m *MockMonthlySalesSummeryRepository) GetMonthlyRevenue(ctx context.Context) ([]*entities.MonthlySales, error) {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for GetMonthlyRevenue")
	}

	var r0 []*entities.MonthlySales
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) ([]*entities.MonthlySales, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) []*entities.MonthlySales); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*entities.MonthlySales)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockMonthlySalesSummeryRepository_GetMonthlyRevenue_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetMonthlyRevenue'
type MockMonthlySalesSummeryRepository_GetMonthlyRevenue_Call struct {
	*mock.Call
}

// GetMonthlyRevenue is a helper method to define mock.On call
//   - ctx context.Context
func (_e *MockMonthlySalesSummeryRepository_Expecter) GetMonthlyRevenue(ctx interface{}) *MockMonthlySalesSummeryRepository_GetMonthlyRevenue_Call {
	return &MockMonthlySalesSummeryRepository_GetMonthlyRevenue_Call{Call: _e.mock.On("GetMonthlyRevenue", ctx)}
}

func (_c *MockMonthlySalesSummeryRepository_GetMonthlyRevenue_Call) Run(run func(ctx context.Context)) *MockMonthlySalesSummeryRepository_GetMonthlyRevenue_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context))
	})
	return _c
}

func (_c *MockMonthlySalesSummeryRepository_GetMonthlyRevenue_Call) Return(_a0 []*entities.MonthlySales, _a1 error) *MockMonthlySalesSummeryRepository_GetMonthlyRevenue_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockMonthlySalesSummeryRepository_GetMonthlyRevenue_Call) RunAndReturn(run func(context.Context) ([]*entities.MonthlySales, error)) *MockMonthlySalesSummeryRepository_GetMonthlyRevenue_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockMonthlySalesSummeryRepository creates a new instance of MockMonthlySalesSummeryRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockMonthlySalesSummeryRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockMonthlySalesSummeryRepository {
	mock := &MockMonthlySalesSummeryRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
